const request=async(e,a=[],t="GET")=>new Promise((d,n)=>{e=new URL(e),"GET"===t.toLocaleUpperCase()&&(e.search=new URLSearchParams(a).toString());let o={method:t};if("POST"===t.toLocaleUpperCase()){o.body=function(e){const a=new FormData;for(const t in e)a.append(t,e[t]);return a}(a)}fetch(e,o).then(e=>{if(e.status>=500){let e="Внутренная ошибка. Обратитесь к руководителю "+Date.now();this.notify.show(e,"error"),n(e)}else 404==e.status?n("Страница не найдена "+Date.now()):d(e.json())}).catch(e=>{n(e)})}),$addRouteBtn=$(".addRoute.btn"),$modal=$("#modal"),$modalTitle=$modal.find(".modal-title"),$modalBody=$modal.find(".modal-body"),$preloader=$modal.find(".preloader"),$alert=$modal.find(".alert");url=window.location.protocol+"//"+window.location.host+"/api";const updateEvents=e=>{e.find('.btn[data-type="image"]').unbind(),e.find('.btn[data-type="menu"]').unbind(),e.find('.btn[data-type="text"]').unbind(),e.find('.btn[data-action="remove"]').unbind(),e.find('.btn[data-type="image"]').click(async function(){let a=$(this),t=a.data("action"),d=a.data("name"),n=a.data("multiply");switch(t){case"add":let o=$modal.clone(!1);o.find(".modal-body").find("> :not(.preloader)").remove(),o.find(".preloader").show(),o.find(".modal-title").text("Фотографии"),o.modal("show");let r=await request(url+"/image");if(r.error)$alert.addClass("alert-danger"),$alert.text(r.error_msg),$alert.show(),$preloader.hide();else{let i=$('<div class="images"/>');$.each(r.data,(r,l)=>{let s=$('<div class="image"/>'),m=$("<img/>"),p=$("<span />");s.click(()=>{if("add"==t){let t=$(`\n                                                   <div class="image-item item">\n                                                        <img src="${l.path}" width="30px" height="30px"\n                                                             alt=""><span class="name">${l.alias}</span>\n                                                        <input type="hidden" name="${d}" value="${l.id}">\n                                                        <span class="btn btn-sm btn-danger" data-action="remove" ><i class="fa fa-minus"></i></span>\n                                                   </div>`);n?t.appendTo(a.siblings(".images")):(a.siblings(".image-item").remove(),a.after(t)),updateEvents(e)}o.modal("hide")}),m.attr("src",l.path),p.text(l.alias),m.appendTo(s),p.appendTo(s),s.appendTo(i)}),o.find(".preloader").hide(),i.appendTo(o.find(".modal-body"))}}}),e.find('.btn[data-type="menu"]').click(async function(){let a=$(this),t=a.data("action"),d=a.data("name"),n=a.data("multiply");if("add"===t){let t=$modal.clone(!1);t.find(".modal-body").find("> :not(.preloader)").remove(),t.find(".preloader").show(),t.find(".modal-title").text("Меню"),t.modal("show");let o=await request(url+"/menu");if(o.error)$alert.addClass("alert-danger"),$alert.text(o.error_msg),$alert.show(),$preloader.hide();else{let r=$('<div class="menus"/>');$.each(o.data,(o,i)=>{let l=$('<div class="menu"/>'),s=$("<span />");l.click(()=>{let o=$(`\n                                                   <div class="menu-item item">\n                                                        <span class="name">${i.name}</span>\n                                                        <input type="hidden" name="${d}" value="${i.id}">\n                                                        <span class="btn btn-sm btn-danger" data-action="remove" ><i class="fa fa-minus"></i></span>\n                                                   </div>`);n?o.appendTo(a.siblings(".menus")):(a.siblings(".menu-item").remove(),a.after(o)),updateEvents(e),t.modal("hide")}),s.text(i.name),s.appendTo(l),l.appendTo(r)}),t.find(".preloader").hide(),r.appendTo(t.find(".modal-body"))}}}),e.find('.btn[data-type="text"]').click(async function(){const a=$(this),t=a.data("action")||"",d=a.data("multiply")||!1,n=a.data("name")||"";if("add"===t&&d){$(`\n                        <div class="text-item item">\n                            <input type="text" class="form-control" name="${n}">\n                            <span class="btn btn-sm btn-danger" data-action="remove"><i class="fa fa-minus"></i></span>\n                        </div>`).appendTo(a.siblings(".texts")),updateEvents(e)}}),e.find('.btn[data-action="remove"]').click(async function(){$(this).parent().remove()})};$addRouteBtn.click(async function(){$preloader.show(),$alert.hide();let e=$(this),a=e.data("parent-id"),t=e.data("menu-id");if(t){$modalBody.find(" > :not(.preloader)").remove(),$modal.modal("show");let e=await request(url+"/template/get");if(e.error)$alert.addClass("alert-danger"),$alert.text(e.error_msg),$alert.show(),$preloader.hide();else{$preloader.hide();let d=e.data.templates||[],n=$('<div class="templates-wrapper" />');$.each(d,(e,d)=>{let o=$(`<div class="template"><span>${d.name}</span></div>`);o.click(async()=>{$modalTitle.text(d.name),$modalBody.find(" > :not(.preloader)").remove(),$preloader.show();let e=await request(url+`/template/${d.id}/get/form`,{parent_id:a});if(e.error)$alert.addClass("alert-danger"),$alert.text(e.error_msg),$alert.show(),$preloader.hide();else{let d=$(e.data.form);$preloader.hide(),$alert.hide(),d.appendTo($modalBody),d.find('div[data-type="html"]').trumbowyg(),updateEvents(d),d.submit(async e=>{e.preventDefault(),e.stopPropagation();let n={};d.find('div[data-type="html"]').each(function(){n[$(this).attr("name")]=$(this).html()}),n["route[menu_id]"]=t,a&&(n["route[parent_id]"]=a);let o=[];for(var r in n)n.hasOwnProperty(r)&&o.push(r+"="+encodeURIComponent(n[r]));o.join("&");let i=`${url}/route/create?${d.serialize()}&${o.join("&")}`,l=await fetch(i);l=await l.json(),console.log(l),l.error?($alert.addClass("alert-danger"),$alert.text(l.error_msg),$alert.show(),$preloader.hide()):location.reload()})}}),o.appendTo(n)}),n.appendTo($modalBody)}}}),$(".editRoute").click(async function(){$preloader.show(),$alert.hide();let e=$(this),a=e.data("id"),t=e.data("template-id");if(a&&t){$modalBody.find(" > :not(.preloader)").remove(),$modal.modal("show"),$modalTitle.text(e.closest(".btn-group").prev().text()),$modalBody.find(" > :not(.preloader)").remove(),$preloader.show();let d=await request(url+`/template/${t}/get/form`,{route_id:a});if(d.error)$alert.addClass("alert-danger"),$alert.text(d.error_msg),$alert.show(),$preloader.hide();else{let e=$(d.data.form);$preloader.hide(),$alert.hide(),e.appendTo($modalBody),e.find('div[data-type="html"]').trumbowyg(),updateEvents(e),e.submit(async t=>{t.preventDefault(),t.stopPropagation();let d={};e.find('div[data-type="html"]').each(function(){d[$(this).attr("name")]=$(this).html()});let n=[];for(var o in d)d.hasOwnProperty(o)&&n.push(o+"="+encodeURIComponent(d[o]));n.join("&");let r=`${url}/route/${a}/edit?${e.serialize()}&${n.join("&")}`,i=await fetch(r);(i=await i.json()).error?($alert.addClass("alert-danger"),$alert.text(i.error_msg),$alert.show(),$preloader.hide()):location.reload()})}}});const $settingsForm=$("#site_settings");$settingsForm.length&&updateEvents($settingsForm);